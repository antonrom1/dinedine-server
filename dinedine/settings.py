"""
Django settings for dinedine project.

Generated by 'django-admin startproject' using Django 5.1.

For more information on this file, see
https://docs.djangoproject.com/en/5.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.1/ref/settings/
"""
import os
from pathlib import Path
from os import environ

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-l29ae5z4a1ic!oh@me09tn5!zpk6yvt8as_#gv%!dsdss@5kuu'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'leaflet',  # Leaflet map
    'django.contrib.gis',
    'phonenumber_field',  # Phone number validation
    'colorfield',  # Color validation
    'address',  # Address validation
    'rest_framework',
    'restaurants',
    'diet',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'dinedine.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [BASE_DIR / 'templates']
        ,
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

REST_FRAMEWORK = {
    # Use Django's standard `django.contrib.auth` permissions,
    # or allow read-only access for unauthenticated users.
    'DEFAULT_PERMISSION_CLASSES': [
        'rest_framework.permissions.DjangoModelPermissionsOrAnonReadOnly'
    ]
}


WSGI_APPLICATION = 'dinedine.wsgi.application'


# Database
# https://docs.djangoproject.com/en/5.1/ref/settings/#databases

# DATABASES = {
#     'default': {
#         'ENGINE': 'django.db.backends.sqlite3',
#         'NAME': BASE_DIR / 'db.sqlite3',
#     }
# }


GDAL_LIBRARY_PATH = environ.get('GDAL_LIBRARY_PATH')
GEOS_LIBRARY_PATH = environ.get('GEOS_LIBRARY_PATH')

DATABASES = {
    'default': {
        'ENGINE': 'django.contrib.gis.db.backends.postgis',
        'NAME': environ.get("DBNAME"),
        'USER': environ.get("DBUSER"),
        'PASSWORD': environ.get("DBPASS"),
        'HOST': environ.get("DBHOST"),
        'PORT': environ.get("DBPORT")
    }
}


# Password validation
# https://docs.djangoproject.com/en/5.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.1/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True

USE_L10N = True

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.1/howto/static-files/

STATIC_URL = '/static/'

# Media files (Uploaded content)
MEDIA_URL = '/media/'
MEDIA_ROOT = os.path.join(BASE_DIR, 'media')

# Default primary key field type
# https://docs.djangoproject.com/en/5.1/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'


# Address configuration
GOOGLE_API_KEY = environ.get("GOOGLE_API_KEY")


# Leaflet configuration

LEAFLET_CONFIG = {
    'DEFAULT_CENTER': (0, 0),  # Default center of the map (latitude, longitude)
    'DEFAULT_ZOOM': 2,  # Default zoom level
    'MIN_ZOOM': 3,  # Minimum zoom level
    'MAX_ZOOM': 18,  # Maximum zoom level
    'SCALE': 'both',  # Display scale bar on the map
    'ATTRIBUTION_PREFIX': 'Powered by Django & Leaflet',  # Custom attribution text
    'PLUGINS': {
        'coordinates': {  # This plugin allows you to enter coordinates directly
            'js': ['https://cdnjs.cloudflare.com/ajax/libs/leaflet-locatecontrol/0.76.2/L.Control.Coordinates.min.js'],
            'css': ['https://cdnjs.cloudflare.com/ajax/libs/leaflet-locatecontrol/0.76.2/L.Control.Coordinates.min.css'],
            'auto-include': True,
        }
    }
}